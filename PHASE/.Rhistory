attach(zelazo)
m <-cbind(1,1:7)
m
zelazo2 <- rbind(zelazo)
zelazo2
zelazo
zelazo2 <- cbind(zelazo)
zelazo2
zelazo2 <- rbind(c(zelazo$active,zelazo$passive))
zelazo2
zelazo$none,zelazo$ctr.8w))
zelazo
zelazo$none,zelazo$ctr.8w))
zelazo2 <- rbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
zelazo2
zelazo2 <- cbind(zelazo2,levels)
length(zelazo2)
levels <- gl(4,6,24, labels=c("active","passive",
"none","ctr.8w"))
zelazo2 <- cbind(zelazo2,levels)
length(zelazo2)
zelazo
length(zelazo2)
levels <- gl(4,6,25, labels=c("active","passive",
"none","ctr.8w"))
zelazo2 <- rbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
zelazo2 <- cbind(zelazo2,levels)
zelazo2 <- rbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
m <-cbind(m,8:14)[,c(1,3,2)]
m
zelazo2 <- rbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
zelazo2
levels
zelazo2 <-cbind(zelazo2)
zelazo2
zelazo2 <-rbind(zelazo2)
zelazo2
zelazo2 <- cbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
zelazo2
zelazo2 <- cbind(zelazo2,levels)
zelazo2 <- cbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
levels <- gl(4,6,23, labels=c("active","passive",
"none","ctr.8w"))
zelazo2 <- cbind(zelazo2,levels)
zelazo2
levels <- gl(4,6,23, labels=c("active","passive",
"none","ctr.8w"))
zelazo2 <- cbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
zelazo2 <- cbind(zelazo2,levels)
zelazo2
zelazo2$levels <- factor(zelazo2$levels,
labels=c("active","passive",
"none","ctr.8w"))
zelazo2
levels <- gl(4,6,23, labels=c("active","passive",
"none","ctr.8w"))
levels
zelazo2 <- cbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
zelazo2
zelazo2 <- cbind(zelazo2,levels)
zelazo2$levels <- factor(zelazo2$levels,
labels=c("active","passive",
"none","ctr.8w"))
zelazo2 <- cbind(zelazo2,levels, as.vector=F)
zelazo2
levels <- gl(4,6,23, labels=c("active","passive",
"none","ctr.8w"))
zelazo2 <- cbind(c(zelazo$active,zelazo$passive,
zelazo$none,zelazo$ctr.8w))
anova(lm(zelazo2~levels))
caff.marital <- matrix(c(652,1537,598,242,36,46,38,21,218
+ ,327,106,67),
+ nrow=3,byrow=T)
caff.marital <- matrix(c(652,1537,598,242,36,46,38,21,218
,327,106,67),
nrow=3,byrow=T)
caff.marital
caesar.shoe<-matrix(c(5,17,7,28,6,36,7,41,8,46,10,140),2)
rownames(caesar.shoe)<-c("Yes","No")
colnames(caesar.shoe)<-c("<4","4","4.5","5","5.5","6+")
chisq.test(caesar.shoe)$expected #gives warning because some
#expected values are <5. BUT only 2/12 values <5, so it passes
chisq.test(caesar.shoe) #so not all proportions equal
#which proportions contribute most to this outcome?
#~post-hoc
#for prop.test split into number successes, total number outcomes
caesar.shoe.yes <-caesar.shoe["Yes",]
#sums all table entries
caesar.shoe.total <-margin.table(caesar.shoe,2)
prop.test(caesar.shoe.yes,caesar.shoe.total)
caesar.shoe
Caesarian.
library(ISwR)
attach(Caesarian)
Caesarian
??Caesarian
attach(caesarean)
library(ISwR)
attach(caesarean)
caesarean
load(caesarean)
?caesarean
install.packages(DESeq)
source("http://www.bioconductor.org/biocLite.R")
biocLite("DESeq")
library(DESeq)
library(DESeq)
#Nooria,
rm(list=ls())
install.packages(ggplot2)
install.packages(glmulti)
source("http://cran.r-project.org/src/contrib/glmulti_1.0.6.tar.gz")
source("http://cran.r-project.org/web/packages/glmulti/index.html")
??glmulti
library(glmulti)
install.packages(glmulti)
install.packages("http://cran.r-project.org/src/contrib/glmulti_1.0.6.tar.gz")
library(glmulti)
install.packages("~/TUFTS/Research/RAnalyses/RSeminar/special topics/glmulti_1.0.6.tar.gz", repos = NULL, type = "source")
install.packages(rJava)
install.packages("rJava")
install.packages("glmulti")
library(glmulti)
library(rJava)
library("rJava", lib.loc="C:/Users/nicole/Documents/R/win-library/2.13")
version
install.packages("rJava")
install.packages("glmulti")
library(glmulti)
?glmulti
library(glmulti)
?glmulti
glmulti.pdf
library(glmulti); library(nnet)
runif(100)-> lol
as.factor(round(lol,1))-> lol2
rnorm(100)+1-> x1
rnorm(100)+1-> x2
multinom(lol2~x1+x2)-> anacond
coef(anacond)
glmulti(lol2~x1+x2, level=1, tfunc=multinom, cri)-> anamulti
coef(anamulti)
glmulti(lol2~x1+x2, level=1, fitfunc=multinom, cri)-> anamulti
glmulti(lol2~x1+x2, level=1, fitfunc=multinom, cri)-> anamulti
coef(anamulti)
library(glmulti)
library(MASS)
glmulti
library(glmulti)
glmulti
citation(glmulti)
citation(())
citation()
citation("glmulti")
citation("ggplot2")
installed.packages()
?ggplot
install.packages(ggplot2)
install.packages('ggplot2')
getwd
getwd()
.libPaths
.libPaths()
?emma
??emma
library(emma)
install.packages('codetools')
library(emma)
update.packages(checkBuilt = TRUE, ask = FALSE)
install.packages("nlme")
install.packages("RSQLite")
install.packages("lme4")
install.packages("glmulti")
library(emma)
?emma
find.package(emma)
path.package(emma)
path.package("emma")
?emma.kinship
??emma.kinship
library(emma)
?kinship
??Kinship
path.package("nlme")
library(nlme)
path.package("nlme")
library(emma)
ls
library(emma)
?emma
??emma
??emma
path.package("emma")
update.packages("emma")
library(emma)
??emma
library('devtools') #allows you to install packages from github
install_github('edge', 'jdstorey')
A <- matrix(c(1,2,3,4), nrow=2)
A
B <- matrix(c(4,5,6,7), nrow=2)
A %*% B
A <- matrix(c(1,2,3,4,5,6), nrow=3)
B <- matrix(c(4,5,6,7,10,1), nrow=2)
A %*% B
C %*% D
C <- matrix(c(1,2,3,4,5,6), nrow=3)
D <- matrix(c(4,5,6,7,10,1), nrow=2)
C %*% D
B %*% A
A %*% B
A <- matrix(c(1,2,3,4), nrow=2)
B <- matrix(c(4,5,6,7), nrow=2)
A %*% B
B %*% A
A
n <- matrix(c(3,4,4,6,9,2,-1,-6,1,1,1,-10,2,9,2,-1), nrow=4)
n
t(n)
n <- t(n)
n
solve(n)
ni <- solve(n)
n %*% ni
n
ni <- solve(n)
n %*% ni
A <- matrix(c(1,2,3,4), nrow=2)
B <- matrix(c(4,5,6,7), nrow=2)
A %*% B
B %*% A
n <- matrix(c(3,4,4,6,9,2,-1,-6,1,1,1,-10,2,9,2,-1), nrow=4)
n <- t(n)
i <- diag(4)
i
n %*% i
ni <- solve(n)
ni
n %*% i
n
n %*% ni
det(A)
Hn <- ((3,9,1,2, 4,2,1,9, 4, -1, 1, 2, 6, -6, -10, -1), nrow=4)
Hn <- matrix(c(3,9,1,2, 4,2,1,9, 4, -1, 1, 2, 6, -6, -10, -1), nrow=4)
Hn
n <- matrix(c(3,4,4,6,
9,2,-1,-6,
1,1,1,-10,
2,9,2,-1), byrow=T, nrow=4)
n
A <- matrix(c(1,2,3,4), nrow=2)
B <- matrix(c(4,5,6,7), nrow=2)
A %*% B
A
B
t(A) # transpose
Hn <- matrix(c(3,9,1,2, 4,2,1,9, 4, -1, 1, 2, 6, -6, -10, -1), nrow=4)
Hx <- (c(a,b,c,d))
Ha <- matrix(c(-10,20,2,-10), nrow=4)
Ha
Hin <- solve(Hn)
Hx = Hin %*% Ha
Hx
Hin
Sig_m=500
Sig_e=6500
Sig_g=2000
m=Sig_m/(Sig_m+Sig_e)
Y=matrix(c(400,
380,
410,
350,
420,
360,
390,
390,
430,
370),10,1);
X=matrix(c(1, 0, 0, 1,
1, 0, 0, 0,
1, 0, 0, 1,
0, 1, 0, 0,
0, 1, 0, 1,
0, 1, 0, 0,
0, 0, 1, 1,
0, 0, 1, 0,
0, 0, 1, 1,
0, 0, 1, 0),10,4, byrow = TRUE )
Ainv=matrix(c(2.5, .5, 1, 0,  0,  0, -1, -1, 0,   0, -1,  0, 0, 0, 0, 0,
.5,  2.5,  0,   1,   0,  0, -1,  0, 0,  -1,  0,  0, -1, 0, 0, 0,
1 ,   0,    2,   0,   0,  0,  0, -1,  0,   0, -1,  0,  0, 0, 0, 0,
0 ,   1,    0 ,  3,   .5,  0,  0, .5, -1,  -1,  0, -1, -1, 0, 0, 0,
0 ,   0,    0,  .5, 1.5, 0,  0,  0, -1,   0,  0,  0,  0, 0, 0,  0,
0 ,   0,    0,   0,  0,  2.5,  0, .5,  0, .5,  0, .5,  0, -1,  -1, -1,
-1,  -1,    0,   0,  0,   0,  2,  0,  0,   0,  0,  0,  0, 0, 0,  0,
-1,   0,   -1,  .5,  0,  .5,  0,  3,  0,   0,  0, -1,  0, -1,  0, 0,
0,   0,    0,  -1, -1,   0,  0,  0,  2,   0,  0,  0,  0, 0, 0,  0,
0,  -1,    0,  -1,  0,  .5,  0,  0,  0, 2.5,  0,  0,  0, 0, -1, 0,
-1,   0,   -1,   0,  0,   0,  0,  0,  0,   0,  2,  0,  0, 0, 0,  0,
0 ,   0,    0,  -1,  0,  .5,  0, -1,  0,   0,  0, 2.5, 0, 0, 0, -1,
0 ,  -1,    0,  -1,  0,   0,  0,  0,  0,   0,  0,  0,  2, 0, 0,  0,
0 ,   0,    0,   0,  0,  -1,  0, -1,  0,   0,  0,  0,  0, 2, 0,  0,
0 ,   0,    0,   0,  0,  -1,  0,  0,  0,   -1,  0,  0,  0, 0, 2,  0,
0 ,   0,    0,   0,  0,  -1,  0,  0,  0,   0,  0, -1,  0, 0, 0,  2),16,16)
Z=  matrix(c
(0,  0, 0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1),
10,16,byrow=TRUE);
R=matrix(c(1,  0,   0,   m,     0,     0,     m,     0,      0,     0,
0,  1,   0,    0,    m,     0,      0,     0,      0,     0,
0,  0,   1,    0,     0,     0,      0,     0,      0,     0,
m, 0,   0,    1,     0,     0,     m,     0,      0,     0,
0, m,   0,    0,     1,     0,      0,     0,      0,     0,
0,  0,   0,    0,     0,     1,      0,    m,      0,     0,
m, 0,   0,   m,     0,     0,      1,     0,      0,     0,
0,  0,   0,    0,     0,    m,      0,     1,      0,     0,
0,  0,   0,    0,     0,     0,      0,     0,      1,     0,
0,  0,   0,    0,     0,     0,      0,     0,      0,    1),10,10)
RINV=solve(R)
LHS=rbind(
cbind( t(X)%*%RINV%*%X, t(X) %*%RINV%*%Z) ,
cbind( t(Z)%*%RINV%*%X, t(Z) %*%RINV%*%Z+Ainv*(1/Sig_g)) )
RHS=rbind(
t(X)%*%RINV%*%Y,
t(Z)%*%RINV%*%Y)
C=solve(LHS)
BU=C %*% RHS
BU
Sig_em = Sig_e + Sig_m
R = R * Sig_em
Sig_m=500
Sig_e=6500
Sig_g=2000
m=Sig_m/(Sig_m+Sig_e)
Y=matrix(c(400,
380,
410,
350,
420,
360,
390,
390,
430,
370),10,1);
X=matrix(c(1, 0, 0, 1,
1, 0, 0, 0,
1, 0, 0, 1,
0, 1, 0, 0,
0, 1, 0, 1,
0, 1, 0, 0,
0, 0, 1, 1,
0, 0, 1, 0,
0, 0, 1, 1,
0, 0, 1, 0),10,4, byrow = TRUE )
Ainv=matrix(c(2.5, .5, 1, 0,  0,  0, -1, -1, 0,   0, -1,  0, 0, 0, 0, 0,
.5,  2.5,  0,   1,   0,  0, -1,  0, 0,  -1,  0,  0, -1, 0, 0, 0,
1 ,   0,    2,   0,   0,  0,  0, -1,  0,   0, -1,  0,  0, 0, 0, 0,
0 ,   1,    0 ,  3,   .5,  0,  0, .5, -1,  -1,  0, -1, -1, 0, 0, 0,
0 ,   0,    0,  .5, 1.5, 0,  0,  0, -1,   0,  0,  0,  0, 0, 0,  0,
0 ,   0,    0,   0,  0,  2.5,  0, .5,  0, .5,  0, .5,  0, -1,  -1, -1,
-1,  -1,    0,   0,  0,   0,  2,  0,  0,   0,  0,  0,  0, 0, 0,  0,
-1,   0,   -1,  .5,  0,  .5,  0,  3,  0,   0,  0, -1,  0, -1,  0, 0,
0,   0,    0,  -1, -1,   0,  0,  0,  2,   0,  0,  0,  0, 0, 0,  0,
0,  -1,    0,  -1,  0,  .5,  0,  0,  0, 2.5,  0,  0,  0, 0, -1, 0,
-1,   0,   -1,   0,  0,   0,  0,  0,  0,   0,  2,  0,  0, 0, 0,  0,
0 ,   0,    0,  -1,  0,  .5,  0, -1,  0,   0,  0, 2.5, 0, 0, 0, -1,
0 ,  -1,    0,  -1,  0,   0,  0,  0,  0,   0,  0,  0,  2, 0, 0,  0,
0 ,   0,    0,   0,  0,  -1,  0, -1,  0,   0,  0,  0,  0, 2, 0,  0,
0 ,   0,    0,   0,  0,  -1,  0,  0,  0,   -1,  0,  0,  0, 0, 2,  0,
0 ,   0,    0,   0,  0,  -1,  0,  0,  0,   0,  0, -1,  0, 0, 0,  2),16,16)
Z=  matrix(c
(0,  0, 0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1),
10,16,byrow=TRUE);
R=matrix(c(1,  0,   0,   m,     0,     0,     m,     0,      0,     0,
0,  1,   0,    0,    m,     0,      0,     0,      0,     0,
0,  0,   1,    0,     0,     0,      0,     0,      0,     0,
m, 0,   0,    1,     0,     0,     m,     0,      0,     0,
0, m,   0,    0,     1,     0,      0,     0,      0,     0,
0,  0,   0,    0,     0,     1,      0,    m,      0,     0,
m, 0,   0,   m,     0,     0,      1,     0,      0,     0,
0,  0,   0,    0,     0,    m,      0,     1,      0,     0,
0,  0,   0,    0,     0,     0,      0,     0,      1,     0,
0,  0,   0,    0,     0,     0,      0,     0,      0,    1),10,10)
RINV=solve(R)
LHS=rbind(
cbind( t(X)%*%RINV%*%X, t(X) %*%RINV%*%Z) ,
cbind( t(Z)%*%RINV%*%X, t(Z) %*%RINV%*%Z+Ainv*(1/Sig_g)) )
RHS=rbind(
t(X)%*%RINV%*%Y,
t(Z)%*%RINV%*%Y)
C=solve(LHS)
BU=C %*% RHS
BU
Sig_m=500
Sig_e=6500
Sig_g=2000
m=Sig_m/(Sig_m+Sig_e)
Y=matrix(c(400,
380,
410,
350,
420,
360,
390,
390,
430,
370),10,1);
X=matrix(c(1, 0, 0, 1,
1, 0, 0, 0,
1, 0, 0, 1,
0, 1, 0, 0,
0, 1, 0, 1,
0, 1, 0, 0,
0, 0, 1, 1,
0, 0, 1, 0,
0, 0, 1, 1,
0, 0, 1, 0),10,4, byrow = TRUE )
Ainv=matrix(c(2.5, .5, 1, 0,  0,  0, -1, -1, 0,   0, -1,  0, 0, 0, 0, 0,
.5,  2.5,  0,   1,   0,  0, -1,  0, 0,  -1,  0,  0, -1, 0, 0, 0,
1 ,   0,    2,   0,   0,  0,  0, -1,  0,   0, -1,  0,  0, 0, 0, 0,
0 ,   1,    0 ,  3,   .5,  0,  0, .5, -1,  -1,  0, -1, -1, 0, 0, 0,
0 ,   0,    0,  .5, 1.5, 0,  0,  0, -1,   0,  0,  0,  0, 0, 0,  0,
0 ,   0,    0,   0,  0,  2.5,  0, .5,  0, .5,  0, .5,  0, -1,  -1, -1,
-1,  -1,    0,   0,  0,   0,  2,  0,  0,   0,  0,  0,  0, 0, 0,  0,
-1,   0,   -1,  .5,  0,  .5,  0,  3,  0,   0,  0, -1,  0, -1,  0, 0,
0,   0,    0,  -1, -1,   0,  0,  0,  2,   0,  0,  0,  0, 0, 0,  0,
0,  -1,    0,  -1,  0,  .5,  0,  0,  0, 2.5,  0,  0,  0, 0, -1, 0,
-1,   0,   -1,   0,  0,   0,  0,  0,  0,   0,  2,  0,  0, 0, 0,  0,
0 ,   0,    0,  -1,  0,  .5,  0, -1,  0,   0,  0, 2.5, 0, 0, 0, -1,
0 ,  -1,    0,  -1,  0,   0,  0,  0,  0,   0,  0,  0,  2, 0, 0,  0,
0 ,   0,    0,   0,  0,  -1,  0, -1,  0,   0,  0,  0,  0, 2, 0,  0,
0 ,   0,    0,   0,  0,  -1,  0,  0,  0,   -1,  0,  0,  0, 0, 2,  0,
0 ,   0,    0,   0,  0,  -1,  0,  0,  0,   0,  0, -1,  0, 0, 0,  2),16,16)
Z=  matrix(c
(0,  0, 0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,
0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1),
10,16,byrow=TRUE);
R=matrix(c(1,  0,   0,   m,     0,     0,     m,     0,      0,     0,
0,  1,   0,    0,    m,     0,      0,     0,      0,     0,
0,  0,   1,    0,     0,     0,      0,     0,      0,     0,
m, 0,   0,    1,     0,     0,     m,     0,      0,     0,
0, m,   0,    0,     1,     0,      0,     0,      0,     0,
0,  0,   0,    0,     0,     1,      0,    m,      0,     0,
m, 0,   0,   m,     0,     0,      1,     0,      0,     0,
0,  0,   0,    0,     0,    m,      0,     1,      0,     0,
0,  0,   0,    0,     0,     0,      0,     0,      1,     0,
0,  0,   0,    0,     0,     0,      0,     0,      0,    1),10,10)
Sig_em = Sig_e + Sig_m
R = R * Sig_em
RINV=solve(R)
LHS=rbind(
cbind( t(X)%*%RINV%*%X, t(X) %*%RINV%*%Z) ,
cbind( t(Z)%*%RINV%*%X, t(Z) %*%RINV%*%Z+Ainv*(1/Sig_g)) )
RHS=rbind(
t(X)%*%RINV%*%Y,
t(Z)%*%RINV%*%Y)
C=solve(LHS)
BU=C %*% RHS
BU
setwd("C:/Users/nicole/PHASE")
h = read.table("example3.out_hotspot")
hist(h[,4])
plot(h[,4])
plot(1:100,seq(1:30000,length=100),type="n")
for (i in 1:100){
segments(h[i,2],i,h[i,3])
}
plot(seq(1:30000,length=100),type="n")
for (i in 1:100){
segments(h[i,2],i,h[i,3],i)
}
plot(seq(1,30000,length=100),type="n")
for (i in 1:100){
segments(h[i,2],i,h[i,3],i)
}
plot(seq(1,30000,length=100),1:100,type="n")
for (i in 1:100){
segments(h[i,2],i,h[i,3],i)
}
